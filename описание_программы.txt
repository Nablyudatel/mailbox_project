Выпонял тестовое задание для завода "SOKOLOV".
-----------------------------------------------------------------------------------------------------------

ТЕКСТ ЗАДАНИЯ
Представьте, что вы пишите backend для почтового сервера.
Ваш код не реализует SMTP/POP3/IMAP (за это отвечают другие компоненты),
но предоставляет сервисы хранения (скажем, в postgres) в виде REST API (можно использовать любой фреймворк,
скажем pyramid, django или что-то асинхронное). Для простоты уберем регистрацию пользователей,
сосредоточимся только на хранении самих писем.

У каждого пользователя есть почтовый ящик с 2-мя каталогами (inbox и sent).
API позволяет пользователю отправить письмо нескольким адресатам.
И тогда письмо сохраняется в каталог sent отправителя и в каталог inbox каждого из получателей.
Также API должно позволять пользователям просмотреть содержимое своих каталогов (список писем),
получить содержание письма, снять/поставить отметку о прочтении или вообще удалить письмо.
Письмом будем считать объект с заголовком, текстовым содержанием, полем from и набором адресатов (to).
-------------------------------------------------------------------------------------------------------------


Задание выполнял с помощью python 3.7 и django 2.2.
Других сторонних библиотек не использовал, чтобы сделать всю систему максимально быстро.
На разработку потратил около шести часов.

ЛОГИЧЕСКАЯ МОДЕЛЬ
Основную работу сосредоточил на конструировании БД.
Модель MailboxUser унаследовал от User, создав мультитабличное наследование.
На мой взгляд такой вариант наиболее удобный с точки зрения ООП, и не такой долгий,
если переопределять абстрактного пользователя, чтобы сделать главным и обязательным к заполнению поле e-mail.
Однако создание модели MailboxUser через админку работает некорректно. Оставил, так как по заданию это не требуется.

БАЗА ДАННЫХ
Postgresql ставить не стал, так как это усложнило бы развёртывание системы конечным пользователем.
Систему выкладываю вместе с уже созданной и заполненной sqllite3

ОСТАЛЬНОЕ
Представления сделал лёгкими, вынеся логику отправки писем в модели.
Клиент выполнил на шаблонизаторе джанго.
Поле "Адресаты" сделал так, как-будто оно связано с контактами. То есть там есть список пользователей с их адресами.
